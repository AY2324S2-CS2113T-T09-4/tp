@startuml
skinparam classAttributeIconSize 0
hide circle 
!define ABSTRACT &#123;abstract&#125;


class HealthList {
    - BMIS: ArrayList<Bmi>
    - PERIODS: ArrayList<Period>
    - APPOINTMENTS: ArrayList<Appointment>

    # addBmi(bmi: Bmi): void
    # addPeriod(period: Period): void
    # addAppointment(appointment: Appointment): void
    + getBmis(): Bmi
    + getPeriods(): Period
    + getAppointments(): Appointment
    + getPeriod(index: int): Period
    + getPeriodSize(): int
    + getBmisSize(): int
    + getPeriodsSize(): int
    + deleteBmi(index: int): void
    + deletePeriod(index: int): void
    + deleteAppointment(index: int): void
    + printLatestBmi(): void
    + printLatestPeriod(): void
    + printLatestAppointment(): void
    + printBmiHistory(): void
    + printPeriodHistory(): void
    + printAppointmentHistory(): void
    + clearHealthLists(): void
    + printLatestThreeCycles(): void
    + predictNextPeriodDate(): LocalDate
}

class Health {
    # date: LocalDate
    + Health()
    + getDate(): LocalDate
}

class Bmi extends Health {
    # height: double
    # weight: double
    # bmiValue: double
    # bmiCategory: String
    # date: LocalDate

    + Bmi(height: String, weight: String, date: String)
    + getHeight(): String
    + getWeight(): String
    + getBmiValue(): String
    + getBmiCategory(bmiValue: double): String
    + getDate(): LocalDate
    + calculateBmiValue(): double
}

class Period extends Health {
    # startDate: LocalDate
    # endDate: LocalDate
    # periodLength: long
    # cycleLength: long

    + Period(stringStartDate: String)
    + Period(stringStartDate: String, stringEndDate: String)
    + updateEndDate(stringStartDate: String): void
    + getStartDate(): LocalDate
    + getEndDate(): LocalDate
    + getPeriodLength(): long
    + getLastThreeCycleLengths(): long
    + calculatePeriodLength(): long
    + nextCyclePrediction(): LocalDate
    + setCycleLength(nextStartDate: LocalDate): void
    + printNextCyclePrediction(nextPeriodStartDate: LocalDate): void
}

class Appointment extends Health {
    # date: LocalDate
    # time: LocalTime
    # description: String

    + Appointment(stringDate: String, stringTime: String, description: String)
    + getDate(): LocalDate
    + getTime(): LocalTime
    + getDescription(): String
}

HealthList *-- "*" Bmi : contains
HealthList *-- "*" Period : contains
HealthList *-- "*" Appointment : contains
HealthList *-- "*" Health: contains

@enduml